/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c DemoIf -p demoif.h:demoif.cpp -i genivi-dbus-types.h ../genivi-positioning-enhancedposition-qt.xml org.genivi.positioning.EnhancedPosition
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DEMOIF_H_1333107453
#define DEMOIF_H_1333107453

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "genivi-dbus-types.h"

/*
 * Proxy class for interface org.genivi.positioning.EnhancedPosition
 */
class DemoIf: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.genivi.positioning.EnhancedPosition"; }

public:
    DemoIf(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~DemoIf();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<MapUShortVariant> GetAccuracy()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetAccuracy"), argumentList);
    }

    inline QDBusPendingReply<MapUShortVariant> GetData(const QList<ushort> &valuesToReturn)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(valuesToReturn);
        return asyncCallWithArgumentList(QLatin1String("GetData"), argumentList);
    }

    inline QDBusPendingReply<MapUShortVariant> GetPosition()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetPosition"), argumentList);
    }

    inline QDBusPendingReply<MapUShortVariant> GetRotationRate()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetRotationRate"), argumentList);
    }

    inline QDBusPendingReply<MapUShortVariant> GetSatelliteInfo()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetSatelliteInfo"), argumentList);
    }

    inline QDBusPendingReply<MapUShortVariant> GetStatus()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetStatus"), argumentList);
    }

    inline QDBusPendingReply<MapUShortVariant> GetTime()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetTime"), argumentList);
    }

    inline QDBusPendingReply<GeniviVersion> GetVersion()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetVersion"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void AccuracyUpdate(const QList<ushort> &changedValues);
    void PositionUpdate(const QList<ushort> &changedValues);
    void RotationRateUpdate(const QList<ushort> &changedValues);
    void SatelliteInfoUpdate(const QList<ushort> &changedValues);
    void StatusUpdate(const QList<ushort> &changedValues);
};

namespace org {
  namespace genivi {
    namespace positioning {
      typedef ::DemoIf EnhancedPosition;
    }
  }
}
#endif
