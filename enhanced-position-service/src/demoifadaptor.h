/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c DemoIfAdaptor -a demoifadaptor.h:demoifadaptor.cpp -i genivi-dbus-types.h -i serverimpl.h -l ServerImpl ../genivi-positioning-enhancedposition-qt.xml org.genivi.positioning.EnhancedPosition
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef DEMOIFADAPTOR_H_1333107453
#define DEMOIFADAPTOR_H_1333107453

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "genivi-dbus-types.h"
#include "serverimpl.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.genivi.positioning.EnhancedPosition
 */
class DemoIfAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.genivi.positioning.EnhancedPosition")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.genivi.positioning.EnhancedPosition\">\n"
"    <version>1.0.0 (22-03-2012)</version>\n"
"    <doc>\n"
"      <line>EnhancedPosition = This interface offers functionalities to retrieve the enhanced position of the vehicle</line>\n"
"    </doc>\n"
"    <method name=\"GetVersion\">\n"
"      <doc>\n"
"        <line>GetVersion = This method returns the API version implemented by the server application</line>\n"
"      </doc>\n"
"      <annotation value=\"GeniviVersion\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"(qqqs)\" name=\"version\">\n"
"        <doc>\n"
"          <line>version = struct(major,minor,micro,date)</line>\n"
"          <line>major = when the major changes, then backward compatibility with previous releases is not granted</line>\n"
"          <line>minor = when the minor changes, then backward compatibility with previous releases is granted, but something changed in the implementation of the API (e.g. new methods may have been added)</line>\n"
"          <line>micro = when the micro changes, then backward compatibility with previous releases is granted (bug fixes or documentation modifications)</line>\n"
"          <line>date = release date (e.g. 21-06-2011)</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </method>\n"
"    <method name=\"GetData\">\n"
"      <doc>\n"
"        <line>GetData = This method returns the current data for Position, Course, Accuracy, Status,...</line>\n"
"      </doc>\n"
"      <annotation value=\"QList&lt;ushort>\" name=\"com.trolltech.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"in\" type=\"aq\" name=\"valuesToReturn\">\n"
"        <doc>\n"
"          <line>valuesToReturn= array[fieldType]</line>\n"
"          <line>key = enum(INVALID,TIMESTAMP,LATITUDE,LONGITUDE,ALTITUDE,HEADING,SPEED,CLIMB,ROLL_RATE,PITCH_RATE,YAW_RATE,...,ALL)</line>\n"
"        </doc>\n"
"      </arg>\n"
"      <annotation value=\"MapUShortVariant\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{qv}\" name=\"data\">\n"
"        <doc>\n"
"          <line>position = dictionary[key,value]</line>\n"
"          <line>dictionary = array of tuples (key,value)</line>\n"
"          <line>If you request for a specific value which is invalid, it's not returned in the dictionary.</line>\n"
"          <line>key = enum(INVALID,TIMESTAMP,LATITUDE,LONGITUDE,ALTITUDE,HEADING,SPEED,CLIMB,ROLL_RATE,PITCH_RATE,YAW_RATE,PDOP,HDOP,VDOP,SIGMA_LATITUDE,SIGMA_LONGITUDE,SIGMA_ALTITUDE,SIGMA_HEADING,... ,ALL</line>\n"
"          <line>key = TIMESTAMP, value = value of type 't', that represents a timestamp in ms</line>\n"
"          <line>key = LATITUDE, value = value of type 'd', that expresses the latitude of the current position. Range [-90:+90]. Example: 48.053250</line>\n"
"          <line>key = LONGITUDE, value = value of type 'd', that expresses the longitude of the current position. Range [-180:+180]. Example: 8.324500</line>\n"
"          <line>key = ALTITUDE, value = value of type 'd', that expresses the altitude above the sea level of the current position in meters</line>\n"
"          <line>key = HEADING, value = value of type 'd', that expresses the course angle in degree. Range [0:360]. 0 = north, 90 = east, 180 = south, 270 = west</line>\n"
"          <line>key = SPEED, value = value of type 'd', that expresses speed measured in m/s. A negative value indicates that the vehicle is moving backwards</line>\n"
"          <line>key = CLIMB, value = value of type 'd', that expresses the road gradient in degrees</line>\n"
"          <line>key = ROLL_RATE, value = value of type 'd', rotation rate around the X-axis in degrees/s. Range [-100:+100]</line>\n"
"          <line>key = PITCH_RATE, value = value of type 'd', rotation rate around the Y-axis in degrees/s. Range [-100:+100]</line>\n"
"          <line>key = YAW_RATE, value = value of type 'd', rotation rate around the Z-axis in degrees/s. Range [-100:+100]</line>\n"
"          <line>key = PDOP, value = value of type 'd', that represents the positional (3D) dilution of precision</line>\n"
"          <line>key = HDOP, value = value of type 'd', that represents the horizontal (2D) dilution of precision</line>\n"
"          <line>key = VDOP, value = value of type 'd', that represents vertical (altitude) dilution of precision</line>\n"
"          <line>key = SIGMA_LATITUDE, value = value of type 'd', that represents the standard deviation for latitude in m</line>\n"
"          <line>key = SIGMA_LONGITUDE, value = value of type 'd', that represents the standard deviation for longitude in m</line>\n"
"          <line>key = SIGMA_ALTITUDE, value = value of type 'd', that represents the standard deviation for altitude in m</line>\n"
"          <line>key = SIGMA_HEADING, value = value of type 'd', that represents the standard deviation for altitude in degrees</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </method>\n"
"    <method name=\"GetPosition\">\n"
"      <doc>\n"
"        <line>GetPosition = This method returns the current position</line>\n"
"      </doc>\n"
"      <annotation value=\"MapUShortVariant\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{qv}\" name=\"position\">\n"
"        <doc>\n"
"          <line>position = dictionary[key,value]</line>\n"
"          <line>dictionary = array of tuples (key,value)</line>\n"
"          <line>If you request for a specific value which is invalid, it's not returned in the dictionary.</line>\n"
"          <line>key = enum(INVALID,TIMESTAMP,LATITUDE,LONGITUDE,ALTITUDE,HEADING,SPEED,CLIMB,...)</line>\n"
"          <line>key = TIMESTAMP, value = value of type 't', that represents a timestamp in ms</line>\n"
"          <line>key = LATITUDE, value = value of type 'd', that expresses the latitude of the current position. Range [-90:+90]. Example: 48.053250</line>\n"
"          <line>key = LONGITUDE, value = value of type 'd', that expresses the longitude of the current position. Range [-180:+180]. Example: 8.324500</line>\n"
"          <line>key = ALTITUDE, value = value of type 'd', that expresses the altitude above the sea level of the current position in meters</line>\n"
"          <line>key = HEADING, value = value of type 'd', that expresses the course angle in degree. Range [0:360]. 0 = north, 90 = east, 180 = south, 270 = west</line>\n"
"          <line>key = SPEED, value = value of type 'd', that expresses speed measured in m/s. A negative value indicates that the vehicle is moving backwards</line>\n"
"          <line>key = CLIMB, value = value of type 'd', that expresses the road gradient in degrees</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </method>\n"
"    <signal name=\"PositionUpdate\">\n"
"      <doc>\n"
"        <line>PositionUpdate = This signal is called to notifiy a client application of a position change. The update frequency is implementation specific. The maximal allowed frequency is 10Hz</line>\n"
"      </doc>\n"
"      <annotation value=\"QList&lt;ushort>\" name=\"com.trolltech.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"out\" type=\"aq\" name=\"changedValues\">\n"
"        <doc>\n"
"          <line>changedValues = array[value]</line>\n"
"          <line>value = enum(INVALID,TIMESTAMP,LATITUDE,LONGITUDE,ALTITUDE,HEADING,SPEED,CLIMB,... )</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </signal>\n"
"    <method name=\"GetRotationRate\">\n"
"      <doc>\n"
"        <line>GetRotationRate = This method returns the rotation rate</line>\n"
"      </doc>\n"
"      <annotation value=\"MapUShortVariant\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{qv}\" name=\"rotationRate\">\n"
"        <doc>\n"
"          <line>rotationRates = dictionary[key,value]</line>\n"
"          <line>dictionary = array of tuples (key,value)</line>\n"
"          <line>If you request for a specific value which is invalid, it's not returned in the dictionary.</line>\n"
"          <line>key = enum(INVALID,TIMESTAMP,ROLL_RATE,PITCH_RATE,YAW_RATE, ... )</line>\n"
"          <line>key = TIMESTAMP, value = value of type 't', that represents a timestamp in ms</line>\n"
"          <line>key = ROLL_RATE, value = rotation rate around the X-axis in degrees/s. Range [-100:+100]</line>\n"
"          <line>key = PITCH_RATE, value = rotation rate around the Y-axis in degrees/s. Range [-100:+100]</line>\n"
"          <line>key = YAW_RATE, value = rotation rate around the Z-axis in degrees/s. Range [-100:+100]</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </method>\n"
"    <signal name=\"RotationRateUpdate\">\n"
"      <doc>\n"
"        <line>RotationRateUpdated = This signal is emitted when the rotation rate changes</line>\n"
"      </doc>\n"
"      <annotation value=\"QList&lt;ushort>\" name=\"com.trolltech.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"out\" type=\"aq\" name=\"changedValues\">\n"
"        <doc>\n"
"          <line>changedValues = array[key]</line>\n"
"          <line>key = enum(INVALID,TIMESTAMP,ROLL_RATE,PITCH_RATE,YAW_RATE, ... )</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </signal>\n"
"    <method name=\"GetAccuracy\">\n"
"      <doc>\n"
"        <line>GetAccuracy = This method returns the accuracy</line>\n"
"      </doc>\n"
"      <annotation value=\"MapUShortVariant\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{qv}\" name=\"accuracy\">\n"
"        <doc>\n"
"          <line>accuracy = dictionary[key,value]</line>\n"
"          <line>dictionary = array of tuples (key,value)</line>\n"
"          <line>If you request for a specific value which is invalid, it's not returned in the dictionary.</line>\n"
"          <line>key = enum(INVALID,TIMESTAMP,PDOP,HDOP,VDOP,SIGMA_LATITUDE,SIGMA_LONGITUDE,SIGMA_ALTITUDE,SIGMA_HEADING,... )</line>\n"
"          <line>key = TIMESTAMP, value = value of type 't', that represents a timestamp in ms</line>\n"
"          <line>key = PDOP, value = value of type 'd', that represents the positional (3D) dilution of precision</line>\n"
"          <line>key = HDOP, value = value of type 'd', that represents the horizontal (2D) dilution of precision</line>\n"
"          <line>key = VDOP, value = value of type 'd', that represents vertical (altitude) dilution of precision</line>\n"
"          <line>key = SIGMA_LATITUDE, value = value of type 'd', that represents the standard deviation for latitude in m</line>\n"
"          <line>key = SIGMA_LONGITUDE, value = value of type 'd', that represents the standard deviation for longitude in m</line>\n"
"          <line>key = SIGMA_ALTITUDE, value = value of type 'd', that represents the standard deviation for altitude in m</line>\n"
"          <line>key = SIGMA_HEADING, value = value of type 'd', that represents the standard deviation for altitude in degrees</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </method>\n"
"    <signal name=\"AccuracyUpdate\">\n"
"      <doc>\n"
"        <line>AccuracyUpdated = This signal is emitted when the accuracy changes</line>\n"
"      </doc>\n"
"      <annotation value=\"QList&lt;ushort>\" name=\"com.trolltech.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"out\" type=\"aq\" name=\"changedValues\">\n"
"        <doc>\n"
"          <line>changedValues = array[value]</line>\n"
"          <line>value = enum(INVALID,TIMESTAMP,PDOP,HDOP,VDOP,SIGMA_LATITUDE,SIGMA_LONGITUDE,SIGMA_ALTITUDE,SIGMA_HEADING, ... )</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </signal>\n"
"    <method name=\"GetSatelliteInfo\">\n"
"      <doc>\n"
"        <line>GetSatelliteInfo = This method returns information about the current satellite constellation</line>\n"
"      </doc>\n"
"      <annotation value=\"MapUShortVariant\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{qv}\" name=\"satelliteInfo\">\n"
"        <doc>\n"
"          <line>satelliteInfo = dictionary[key,value]</line>\n"
"          <line>dictionary = array of tuples (key,value)</line>\n"
"          <line>If you request for a specific value which is invalid, it's not returned in the dictionary.</line>\n"
"          <line>key = enum(INVALID,TIMESTAMP,USED_SATELLITES,TRACKED_SATELLITES,VISIBLE_SATELLITES,SATELLITE_DETAILS, ...)</line>\n"
"          <line>key = TIMESTAMP, value = value of type 't', that represents a timestamp in ms</line>\n"
"          <line>key = USED_SATELLITES, value = value of type 'y', that represents the number of used satellites</line>\n"
"          <line>key = TRACKED_SATELLITES, value = value of type 'y', that represents the number of tracked satellites</line>\n"
"          <line>key = VISIBLE_SATELLITES, value = value of type 'y', that represents the number of visible satellites</line>\n"
"          <line>key = SATELLITE_DETAILS, value = value of type 'a(ubuuu)', that represents an array(struct(satId,inUse,elevation,azimuth,snr)</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </method>\n"
"    <signal name=\"SatelliteInfoUpdate\">\n"
"      <doc>\n"
"        <line>SatelliteInfoUpdate = This signal is emitted when information about the current satellite information is updated</line>\n"
"      </doc>\n"
"      <annotation value=\"QList&lt;ushort>\" name=\"com.trolltech.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"out\" type=\"aq\" name=\"changedValues\">\n"
"        <doc>\n"
"          <line>changedValues = array[value]</line>\n"
"          <line>key = enum(INVALID,TIMESTAMP,USED_SATELLITES,TRACKED_SATELLITES,VISIBLE_SATELLITES,SATELLITE_DETAILS, ...)</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </signal>\n"
"    <method name=\"GetStatus\">\n"
"      <doc>\n"
"        <line>GetStatus = This method returns the status of this service</line>\n"
"      </doc>\n"
"      <annotation value=\"MapUShortVariant\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{qv}\" name=\"status\">\n"
"        <doc>\n"
"          <line>status = dictionary[key,value]</line>\n"
"          <line>dictionary = array of tuples (key,value)</line>\n"
"          <line>If you request for a specific value which is invalid, it's not returned in the dictionary.</line>\n"
"          <line>key = enum(INVALID,TIMESTAMP,GNSS_FIX_STATUS,DR_STATUS, ... )</line>\n"
"          <line>key = TIMESTAMP, value = value of type 't', that represents a timestamp in ms</line>\n"
"          <line>key = GNSS_FIX_STATUS, value = value of type 'q', that represents an enum(INVALID(0x00),NO_FIX(0x01),TIME_FIX(0x02),2D_FIX(0x03),3D_FIX(0x04), ... )</line>\n"
"          <line>key = DR_STATUS, value = value of type 'b', where TRUE means that a dead-reckoning algorithm has been used to calculate the current position</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </method>\n"
"    <signal name=\"StatusUpdate\">\n"
"      <doc>\n"
"        <line>StatusUpdate = This signal is emitted when the status of this service changes</line>\n"
"      </doc>\n"
"      <annotation value=\"QList&lt;ushort>\" name=\"com.trolltech.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"out\" type=\"aq\" name=\"changedValues\">\n"
"        <doc>\n"
"          <line>changedValues = array[value]</line>\n"
"          <line>key = enum(INVALID,TIMESTAMP,GNSS_FIX_STATUS,DR_STATUS, ... )</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </signal>\n"
"    <method name=\"GetTime\">\n"
"      <doc>\n"
"        <line>GetTime = This method returns UTC time and date</line>\n"
"      </doc>\n"
"      <annotation value=\"MapUShortVariant\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{qv}\" name=\"time\">\n"
"        <doc>\n"
"          <line>time = dictionary[key,value]</line>\n"
"          <line>dictionary = array of tuples (key,value)</line>\n"
"          <line>If you request for a specific value which is invalid, it's not returned in the dictionary.</line>\n"
"          <line>key = enum(INVALID,TIMESTAMP,YEAR,MONTH,DAY,HOUR,MINUTE,SECOND,MS, ... )</line>\n"
"          <line>key = TIMESTAMP, value = value of type 't', that represents a timestamp in ms</line>\n"
"          <line>key = YEAR, value = value of type 'q', 4 digits number that indicates the year. Example: 2012</line>\n"
"          <line>key = MONTH, value = value of type 'y', 2 digits number that indicates the month. Example: 03 means March</line>\n"
"          <line>key = DAY, value = value of type 'y', 2 digits number that indicates the day. Range [0:31]. Example: 07</line>\n"
"          <line>key = HOUR, value = value of type 'y', 2 digits number that indicates the hour. Range [0:23].  Example: 01</line>\n"
"          <line>key = MINUTE, value = value of type 'y', 2 digits number that represents the minutes. Range [0:59]. Example: 01</line>\n"
"          <line>key = SECOND, value = value of type 'y', 2 digits number that represents the seconds. Range [0:59]. Example: 01</line>\n"
"          <line>key = MS, value = value of type 'q', 3 digits number that represents the milliseconds. Range [0:999]. Example: 007</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    DemoIfAdaptor(ServerImpl *parent);
    virtual ~DemoIfAdaptor();

    inline ServerImpl *parent() const
    { return static_cast<ServerImpl *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    MapUShortVariant GetAccuracy();
    MapUShortVariant GetData(const QList<ushort> &valuesToReturn);
    MapUShortVariant GetPosition();
    MapUShortVariant GetRotationRate();
    MapUShortVariant GetSatelliteInfo();
    MapUShortVariant GetStatus();
    MapUShortVariant GetTime();
    GeniviVersion GetVersion();
Q_SIGNALS: // SIGNALS
    void AccuracyUpdate(const QList<ushort> &changedValues);
    void PositionUpdate(const QList<ushort> &changedValues);
    void RotationRateUpdate(const QList<ushort> &changedValues);
    void SatelliteInfoUpdate(const QList<ushort> &changedValues);
    void StatusUpdate(const QList<ushort> &changedValues);
};

#endif
