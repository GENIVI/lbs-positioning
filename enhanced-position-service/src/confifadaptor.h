/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c ConfigurationIfAdaptor -a confifadaptor.h:confifadaptor.cpp -i genivi-dbus-types.h -i ConfigurationImpl.h -l ConfigurationImpl ../genivi-positioning-configuration-qt.xml org.genivi.positioning.Configuration
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef CONFIFADAPTOR_H_1331549840
#define CONFIFADAPTOR_H_1331549840

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "genivi-dbus-types.h"
#include "ConfigurationImpl.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.genivi.positioning.Configuration
 */
class ConfigurationIfAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.genivi.positioning.Configuration")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.genivi.positioning.Configuration\">\n"
"    <version>0.0.3 (13-03-2012)</version>\n"
"    <doc>\n"
"      <line>Configuration = This interface allow a client application to set and read configuration options</line>\n"
"    </doc>\n"
"    <method name=\"GetVersion\">\n"
"      <doc>\n"
"        <line>GetVersion = This method returns the API version implemented by the server application</line>\n"
"      </doc>\n"
"      <annotation value=\"GeniviVersion\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"(qqqs)\" name=\"version\">\n"
"        <doc>\n"
"          <line>version = struct(major,minor,micro,date)</line>\n"
"          <line>major = when the major changes, then backward compatibility with previous releases is not granted</line>\n"
"          <line>minor = when the minor changes, then backward compatibility with previous releases is granted, but something changed in the implementation of the API (e.g. new methods may have been added)</line>\n"
"          <line>micro = when the micro changes, then backward compatibility with previous releases is granted (bug fixes or documentation modifications)</line>\n"
"          <line>date = release date (e.g. 21-06-2011)</line>\n"
"        </doc>\n"
"      </arg>\n"
"    </method>\n"
"    <method name=\"GetProperties\">\n"
"      <doc>\n"
"        <line>Returns all global system properties. See the properties section for available properties.</line>\n"
"      </doc>\n"
"      <annotation value=\"QVariantMap\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{sv}\" name=\"properties\"/>\n"
"    </method>\n"
"    <method name=\"SetProperty\">\n"
"      <doc>\n"
"        <line>Changes the value of the specified property.</line>\n"
"        <line>Only properties that are listed as read-write are changeable.</line>\n"
"        <line>On success a PropertyChanged signal will be emitted.</line>\n"
"      </doc>\n"
"      <arg direction=\"in\" type=\"s\" name=\"name\"/>\n"
"      <arg direction=\"in\" type=\"v\" name=\"value\"/>\n"
"      <error name=\"org.genivi.positioning.Configuration.Error.InvalidProperty\"/>\n"
"    </method>\n"
"    <signal name=\"PropertyChanged\">\n"
"      <doc>\n"
"        <line>This signal indicates a changed value of the given property.</line>\n"
"      </doc>\n"
"      <arg direction=\"out\" type=\"s\" name=\"name\"/>\n"
"      <arg direction=\"out\" type=\"v\" name=\"value\"/>\n"
"    </signal>\n"
"    <property access=\"readwrite\" type=\"i\" name=\"SatelliteSystem\">\n"
"      <doc>\n"
"        <line>SatelliteSystem = enum(INVALID,GPS,GLONASS,GALILEO,COMPASS, ...)</line>\n"
"      </doc>\n"
"    </property>\n"
"    <property access=\"readwrite\" type=\"q\" name=\"UpdateInterval\">\n"
"      <doc>\n"
"        <line>UpdateInterval = update interval in ms</line>\n"
"      </doc>\n"
"    </property>\n"
"  </interface>\n"
        "")
public:
    ConfigurationIfAdaptor(ConfigurationImpl *parent);
    virtual ~ConfigurationIfAdaptor();

    inline ConfigurationImpl *parent() const
    { return static_cast<ConfigurationImpl *>(QObject::parent()); }

public: // PROPERTIES
    Q_PROPERTY(int SatelliteSystem READ satelliteSystem WRITE setSatelliteSystem)
    int satelliteSystem() const;
    void setSatelliteSystem(int value);

    Q_PROPERTY(ushort UpdateInterval READ updateInterval WRITE setUpdateInterval)
    ushort updateInterval() const;
    void setUpdateInterval(ushort value);

public Q_SLOTS: // METHODS
    QVariantMap GetProperties();
    GeniviVersion GetVersion();
    void SetProperty(const QString &name, const QDBusVariant &value);
Q_SIGNALS: // SIGNALS
    void PropertyChanged(const QString &name, const QDBusVariant &value);
};

#endif
