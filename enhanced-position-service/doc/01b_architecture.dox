/*!

\page Architecture

The following component diagram shows how the EnhancedPositionService interacts with other GENIVI components:

    \li GNSSService (Library)
    \li SensorService (Library)
    \li EnhancedPositionService (Daemon with D-Bus interface)
    \li NavigationCore
    \li MapViewer

\image html enh-context-enhpos.png 
\image latex enh-context-enhpos.png "EnhancedPositionService" width=\textwidth

\section enhanced-position EnhancedPositionService

The EnhancedPositionService is a software component that offers positioning information to client applications.
To calculate the current vehicle position, data from a GNSS receiver (e.g. GPS data) and available vehicle sensors (e.g. gyroscope and wheel ticks) are taken into account (dead-reckoning). In this way the EnhancedPositionService can calculate the current position even on roads, where the GNSS signal is too weak (e.g. in a tunnel, or in a parking garage).

The result of the map matching can be provided as feedback to this module by the NavigationCore component.

This component is the main client of the GNSSService and of the SensorsService. 

The EnhancedPositionService will be typically implemented as a multi-client daemon with a D-Bus interface.

\subsection enhanced-position-interfaces EnhancedPositionService Interfaces

\image html enh-component-interfaces.png 
\image latex enh-component-interfaces.png "EnhancedPositionService Interfaces" width=\textwidth

- EnhancedPosition : This interface provides a 'filtered' position that takes into account the value coming from the vehicle sensors (dead-reckoning).
- PositionFeedback : This interface offers methods that allows the NavigationCore to provide a position feedback to the EnhancedPositionService.
The component that implements the PositionFeedback interface requires the data provided by a `map matcher` (typically the
NavigationCore component). The PositionFeedback is an added improvement which does not negatively affect systems that donÂ´t support maps or have a map-matching feature.
- Configuration: This interface allows a client application to manage configuration parameters, like the GNSS type.


\section gnss-service GNSSService

The GNSSService is a component that retrieves positioning data from a GNSS receiver
(e.g. NMEA sentences from a GPS receiver) and presents them to its client applications.

The GNSSService will be typically implemented as a single-client library.


\section sensor-service SensorsService

The SensorsService is a component that retrieves sensor data from several vehicle sensors
(e.g. gyroscope, wheel ticks) and presents them to its client applications.

The SensorsService will be typically implemented as a single-client library.


\section NavigationCore NavigationCore

The NavigationCore is a component that is responsible for:
- providing all data for selection of locations
- calculating routes
- providing guiding information
- providing a map matched position

The NavigationCore uses the interface EnhancedPositionService to retrieve information about the current position.

The NavigationCore can match the current position to the local position and provide a feedback to the EnhancedPositionService via the interface MapFeedback.


\section MapViewer MapViewer

This MapViewer is responsible for:
- rendering maps and other information related to the navigation on a display
- setting the graphic features that must be visualized
- setting user preferences

The Map Viewer is a separate component, logically seperated from the NavigationCore.
It uses the results of the map matching as input for drawing the car on the map.

*/
